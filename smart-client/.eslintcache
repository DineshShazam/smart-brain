[{"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\index.js":"1","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\App.js":"2","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\reportWebVitals.js":"3","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Logo\\logo.js":"4","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Navigation\\navbar.js":"5","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\ImageUpload\\imageUpload.js":"6","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\DisplayImage\\imageDisplay.js":"7","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\ImageUpload\\dropdownValue.js":"8","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\utils\\imageDetection.js":"9","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Core\\state.js":"10","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Core\\reducer.js":"11","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Loading&Notification\\loadingHook.js":"12","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Loading&Notification\\notifyHook.js":"13","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Authentication\\login.js":"14"},{"size":789,"mtime":1607615845655,"results":"15","hashOfConfig":"16"},{"size":1578,"mtime":1607797750994,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":478,"mtime":1606931119778,"results":"19","hashOfConfig":"16"},{"size":1131,"mtime":1607798123123,"results":"20","hashOfConfig":"16"},{"size":6743,"mtime":1607614049918,"results":"21","hashOfConfig":"16"},{"size":1317,"mtime":1607612231436,"results":"22","hashOfConfig":"16"},{"size":225,"mtime":1607245233374,"results":"23","hashOfConfig":"16"},{"size":3041,"mtime":1607501428574,"results":"24","hashOfConfig":"16"},{"size":366,"mtime":1607499312835,"results":"25","hashOfConfig":"16"},{"size":1170,"mtime":1607525379107,"results":"26","hashOfConfig":"16"},{"size":818,"mtime":1607612225229,"results":"27","hashOfConfig":"16"},{"size":261,"mtime":1607613567534,"results":"28","hashOfConfig":"16"},{"size":3230,"mtime":1607799122096,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"fh8gvw",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\index.js",[],["61","62"],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\App.js",["63"],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\reportWebVitals.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Logo\\logo.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Navigation\\navbar.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\ImageUpload\\imageUpload.js",["64"],"import React, { useState,useEffect } from 'react'\r\nimport './imageUpload.css'\r\nimport ImageDisplay from '../DisplayImage/imageDisplay'\r\nimport Clarifai from 'clarifai'\r\nimport {FormControl,Select,MenuItem} from '@material-ui/core'\r\nimport mDropDown from './dropdownValue'\r\nimport {imageDetect} from '../utils/imageDetection'\r\nimport {useStateValue} from '../../Core/state';\r\nimport {toast} from 'react-toastify'\r\nimport useLoader from '../Loading&Notification/loadingHook.js'\r\n\r\n\r\nconst ImageUpload = () => {\r\n\r\n    const [{imageURL},dispatch] = useStateValue();\r\n    const [mValue,setMvalue] = useState('Choose Options');\r\n\r\n    // Custom Hook\r\n    const [loader,showLoader,hideLoader] = useLoader();\r\n    // Clarifai.FACE_DETECT_MODEL,Clarifai.CELEBRITY_MODEL,\r\n    // Clarifai.DEMOGRAPHICS_MODEL,Clarifai.FOOD_MODEL\r\n\r\n    const app = new Clarifai.App({\r\n        apiKey: 'bdd12b71f8c149468592c8059018a545'\r\n    })\r\n\r\n\r\n    const onChange = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'IMAGE_URL',\r\n            payload: e.target.value\r\n        });\r\n        // dispatch([{type:'EMPTY_IMAGE_URL'},{type:'EMPTY_VALUE'}])\r\n        // dispatch({\r\n        //     type:'EMPTY_IMAGE_URL'\r\n        // })\r\n        dispatch({\r\n            type:'EMPTY_VALUE'\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        dispatch({\r\n            type:'EMPTY_VALUE'\r\n        })\r\n        // set the dropdown value to state 'setMvalue'\r\n        // get the image URL and send it to clarifai and get the response \r\n        // send the url to <ImageDisplay Component>\r\n        if(!imageURL) {\r\n            alert('Please add the Image URL and choose the options');\r\n            setMvalue('Choose Options')\r\n        } else {\r\n            e.preventDefault()\r\n            const dropdownValue = e.target.value;\r\n            setMvalue(dropdownValue);\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if(mValue === 'Choose Options') {\r\n            return;\r\n        } else {\r\n\r\n            switch (mValue) {\r\n                case 1:\r\n                    showLoader();\r\n                   app.models.predict(\r\n                       Clarifai.FACE_DETECT_MODEL,\r\n                       imageURL\r\n                   ).then((response) => {\r\n                        const faceBox = imageDetect(response,mValue);\r\n                        dispatch({\r\n                            type:'BOUNDING_BOX',\r\n                            payload: faceBox\r\n                        })\r\n                        hideLoader();   \r\n                   }).catch((err) => {\r\n                        hideLoader();\r\n                       toast.error('Unable to Reach API');\r\n                       console.log(new Error(err));\r\n                   })\r\n                   break;\r\n                case 2:\r\n                    showLoader();\r\n                    app.models.predict(\r\n                        Clarifai.CELEBRITY_MODEL,\r\n                        imageURL\r\n                    ).then((response) => {\r\n                         const {bounding_box1,celeb} = imageDetect(response,mValue);\r\n                         dispatch({\r\n                            type:'BOUNDING_BOX',\r\n                            payload: bounding_box1\r\n                        })\r\n                         const {name} = celeb;\r\n                         dispatch({\r\n                             type:'CELEBIRITY',\r\n                             payload:name\r\n                         })\r\n                         hideLoader();\r\n                    }).catch((err) => {\r\n                        hideLoader();\r\n                        toast.error('Unable to Reach API');\r\n                        console.log(new Error(err));\r\n                    })\r\n                    break;\r\n                case 3:\r\n                    showLoader();\r\n                    app.models.predict(\r\n                        Clarifai.DEMOGRAPHICS_MODEL,\r\n                        imageURL\r\n                    ).then((response) => {\r\n                         const {bounding_Box2,age,gender} = imageDetect(response,mValue);\r\n                         const ageD = age[0].name;\r\n                         const genderD = gender[0].name;\r\n\r\n                         dispatch({\r\n                             type:'BOUNDING_BOX',\r\n                             payload: bounding_Box2\r\n                         })\r\n        \r\n                         dispatch({\r\n                             type:'DEMOGRAPHICS',                            \r\n                             payload: {ageD,genderD}\r\n                         })\r\n                         hideLoader();\r\n                    }).catch((err) => {\r\n                        hideLoader();\r\n                        toast.error('Unable to Reach API');\r\n                        console.log(new Error(err));\r\n                    })\r\n                    break;\r\n                case 4:\r\n                    app.models.predict(\r\n                        Clarifai.FOOD_MODEL,\r\n                        imageURL\r\n                    ).then((response) => {\r\n                         console.log(response);\r\n                    }).catch((err) => {\r\n                        alert('Unable to Reach API');\r\n                        console.log(new Error(err));\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n    \r\n        }\r\n      \r\n        \r\n    },[mValue])\r\n\r\n    return (\r\n        <>\r\n    \r\n        <div>\r\n             <p className='f3'>\r\n               {'This Magic Brain will detect faces in your pictures. Git it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n            <div className='form center pa4 br3 shadow-5'>\r\n                <input className='f4 pa2 w-70 center' type='text' name='imageURL' onChange={(e) => {onChange(e)}} autoComplete=\"off\" required/>\r\n                {/* <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' type='submit' onClick={onSubmit}>Detect</button> */}\r\n                <FormControl className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'>\r\n                    <Select variant='outlined' value={mValue} onChange={onSubmit}>\r\n                        <MenuItem value='Choose Options'>Choose Options</MenuItem>\r\n                        {\r\n                            mDropDown.map(({display,value}) => (\r\n                                <MenuItem value={value}>{display}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ImageDisplay />\r\n        {/* <RingLoader /> */}\r\n        {loader}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ImageUpload\r\n","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\DisplayImage\\imageDisplay.js",["65"],"import React from 'react'\r\nimport { useStateValue } from '../../Core/state';\r\nimport './imageDisplay.css'\r\n\r\nconst ImageDisplay = () => {\r\n\r\n    const [{imageURL,imageBox,Celeb,DemoGraph},dispatch] = useStateValue();\r\n    const {genderD,ageD} = DemoGraph;\r\n    // console.log(genderD);\r\n    // console.log(ageD);\r\n    // console.log(imageBox);\r\n    // console.log(Celeb);\r\n    // console.log(DemoGraph);\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' src={imageURL} alt='' width='500px' height='auto' />\r\n                {\r\n                    (imageBox !== undefined) ? <div className='bounding-box' style={{top: imageBox?.top, right: imageBox?.right, bottom: imageBox?.bottom, left: imageBox?.left}}></div> : <></>\r\n                }\r\n\r\n                {\r\n                    (Celeb !== '') ? <div className='celeb' style={{top: imageBox.top}}> <span>{Celeb.toUpperCase()}</span> </div> : <div></div>\r\n                }\r\n\r\n                {\r\n                    (Object.keys(DemoGraph).length !== 0) ? <div className='celeb1' style={{top: imageBox.top}}> <span> {`${genderD.toUpperCase()},${ageD}`} </span> </div> : <div></div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageDisplay\r\n\r\n\r\n","D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\ImageUpload\\dropdownValue.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\utils\\imageDetection.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Core\\state.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Core\\reducer.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Loading&Notification\\loadingHook.js",[],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Loading&Notification\\notifyHook.js",["66"],"D:\\NODE-CORE\\Full-Stack-Dev\\webDev-2021\\Smart-Brain\\smart-client\\src\\Components\\Authentication\\login.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"76","line":153,"column":7,"nodeType":"77","endLine":153,"endColumn":15,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":7,"column":48,"nodeType":"73","messageId":"74","endLine":7,"endColumn":56},{"ruleId":"71","severity":1,"message":"80","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'app.models', 'dispatch', 'hideLoader', 'imageURL', and 'showLoader'. Either include them or remove the dependency array.","ArrayExpression",["83"],"'dispatch' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [app.models, dispatch, hideLoader, imageURL, mValue, showLoader]",{"range":"86","text":"87"},[5411,5419],"[app.models, dispatch, hideLoader, imageURL, mValue, showLoader]"]